//
// (C) 2010-2012 ICM UW. All rights reserved.
//

//  @since 2012-08-07

import "document_similarity_out.proto";

option java_package = "pl.edu.icm.coansys.models";
option java_outer_classname = "DocumentProtos";

message ProvenanceInfo {
	required SingleProvenanceInfo currentProvenance = 1;
	repeated SingleProvenanceInfo previousProvenances = 2;

	message SingleProvenanceInfo {
		required string lastModificationMarkerId = 1;
		required int64 lastModificationDate = 2;
	}
}

message KeyValue{
	required string key = 1;
	required string value = 2;
	optional string comment = 3;
	optional ProvenanceInfo	provenance = 4;
}

message TextWithLanguage{
	required string text = 1;
	optional string language = 2;
	optional string comment = 3;
}

message ClassifCode{
	required string source = 1;
	repeated string value = 2;
	optional ProvenanceInfo provenance = 3;
}

message Affiliation{
	required string key = 1;
	required string affiliationId = 2;
	required string text = 3;
	optional ProvenanceInfo provenance = 4;
    optional string organizationCurrentId=5;
}

// key -- docId + "#c" + positionNumber
// positionNumber -- author's position in the document, starting by 1
message Author{
	required string key = 1;
	optional string forenames = 2;
	optional string surname = 3;
	optional string name = 4;
	optional string email = 5;
	repeated KeyValue affiliationRef = 6;
	optional string docId = 7;
	optional int32  positionNumber = 8;
    repeated KeyValue extId = 9;
	repeated KeyValue auxiliarInfo = 10;
	optional string currentPersonId=11;
}

// common metadata for documents and references
message BasicMetadata{
	repeated TextWithLanguage title = 1;
	repeated Author author = 2;
	optional string doi = 3;
	optional string journal = 4;
	optional string isbn = 5;
	optional string issn = 6;
	optional string year = 7;
	optional string issue = 8;
	optional string volume = 9;
	optional string pages = 10;
	repeated ClassifCode classifCode = 11;
    repeated string parentId = 12; 
    repeated string currentProjectId= 13;
}

message KeywordsList {
	optional string type = 1;
	optional string language = 2;
	repeated string keywords = 3;
	optional string comment = 4;
	optional ProvenanceInfo provenance = 5;
}

// key -- a hash based on title, authors' names, year, abstract, issn, issue, pages, volume (name based UUID, type 3)
// (see pl.edu.icm.coansys.parsers.MetadataToProtoMetadataParserImpl.calculateDocKey())
// collection -- a collection name, usually a publisher name or if data is harvester from the web, a collection can be an URL
// sourcePath -- additional info about a location from which the data was imported
message DocumentMetadata{
	required string key = 1;
	required BasicMetadata basicMetadata = 2;
	repeated TextWithLanguage documentAbstract = 3;
	repeated KeywordsList keywords = 10;
	repeated pl.edu.icm.coansys.models.DocumentSimilarityInfo similarDocumentInfo = 20;
	repeated KeyValue extId = 5;
	repeated KeyValue auxiliarInfo = 6;
	repeated Affiliation affiliations = 12;
	repeated ReferenceMetadata reference = 7;
	repeated string collection = 8;
	optional string sourcePath = 9;
	repeated string origKey = 11;
}


// position -- citation's position in reference list, starting by 1
message ReferenceMetadata{
	required BasicMetadata basicMetadata = 1;
	optional string sourceDocKey = 2;
	optional int32 position = 3;
	optional string rawCitationText = 4;
	repeated KeyValue extId = 5;
}

// key -- same as in DocumentMetadata
// mediaType -- "media.type.pdf", "media.type.txt" etc.; defined in ProtoConstants class
// destinationPath -- probably unused
message Media {
	required string key = 1;
	required string mediaType = 2;
	required bytes content = 3;
	optional string collection = 4;
	optional string sourcePath = 5;
	optional int64 sourceFilesize = 6;
	optional string destinationPath = 7;
	optional ProvenanceInfo provenance = 8;
}

// a container to pack multiple media entries in a single message (to store in one HBase cell)
message MediaContainer {
	repeated Media media = 1;
}

// used only in sequece files, to store both metadata and media as a single value;
// rowId -- collection + (if PDF attached) "_PDF" + "_" + documentMetadata.key;
message DocumentWrapper{
	required string rowId = 1;
	optional DocumentMetadata documentMetadata = 2;
	optional MediaContainer mediaContainer = 3;
}
