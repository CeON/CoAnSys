<!--
  This file is part of CoAnSys project.
  Copyright (c) 2012-2013 ICM-UW
  
  CoAnSys is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  CoAnSys is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU Affero General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with CoAnSys. If not, see <http://www.gnu.org/licenses/>.
-->
<!-- ============================================================= -->
<!-- ========================== OOZIE-GENERAL ==================== -->
<!-- ============================================================= -->

# BEG:REPLACE @OOZIE-START@
<workflow-app name='${project}*${subproject}' xmlns="uri:oozie:workflow:0.4">

	<parameters>
		<!-- Properties associated with cluster parameters -->
		<property>
			<name>and_pool</name>
			<value>default</value>
			<description>Fairscheduler pool property.</description>
		</property>
		<property>
			<name>and_mapredChildJavaOpts_one</name>
			<value>-Xmx1024m</value>
			<description>Java options for mappers in disambiguation-one Pig scripts.</description>
		</property>
		<property>
			<name>and_mapredChildJavaOpts_exh</name>
			<!-- minimum RAM: exh_limit^2 / 2 * 64 / 8 / 1024 / 1024 MB * const1 + const2 -->
			<value>-Xmx1024m</value>
			<description>Java options for mappers in disambiguation-exhaustive Pig scripts.</description>
		</property>
		<property>
			<name>and_mapredChildJavaOpts_app_sim</name>
			<value>-Xmx8000m</value>
			<description>Java options for mappers in disambiguation-aproximate with storing similarities Pig scripts.</description>
		</property>
		<property>
			<name>and_mapredChildJavaOpts_app_no_sim</name>
			<value>-Xmx8000m</value>
			<description>Java options for mappers in disambiguation-aproximate without storing similarities Pig scripts.</description>
		</property>						
		<!-- Additional out data paths -->
		<property>
			<name>and_splitted_output</name>
			<value>${results}/splitted</value>
			<description>Path for data with splitted groups of coontributors (splited in terms of the number of contributors in each cluster).</description>
		</property>
		<property>
			<name>and_cid_dockey</name>
			<value>${results}/cid_dockey</value>
			<description>Path for additional data - pairs ( document id, contributor id ). Used in 'serialize' action to associate generated ( author uuid, contributor id ) pairs with documents. </description>
		</property>
		<property>
			<name>and_outputContribs</name>
			<value>${results}/outputContribs</value>
			<description>Path for analyzed data - pairs ( contributor id, uuid ). </description>
		</property>
		<property>
			<name>and_failedContribs</name>
			<value>${results}/failedContribs</value>
			<description>Path for not analyzed data - too big groups of contributors. </description>
		</property>
		<!-- Properties for Pig scripts -->
		<property>
			<name>and_sample</name>
			<value>1.0</value>
			<description>Input Sample Size: [0; 1]. Default 1 (all data).</description>
		</property>
		<property>
			<name>and_threshold</name>
			<value>-0.8</value>
			<description>Initial value for calculating affinity between contributors: [-1.0; 0].</description>
		</property>
		<property>
			<name>and_lang</name>
			<value>all</value>
			<description>Responsible for the selection of documents with given language. Value format as in document metadata. Default: all. </description>
		</property>
		<property>
			<name>and_exhaustive_limit</name>
			<value>6627</value>
			<description>Upper limit on the size of the contributors group for exhaustive disambiguation algorithm.</description>
		</property>
		<property>
			<name>and_aproximate_sim_limit</name>
			<value>1000000000</value>
			<description>Upper limit on the size of the contributors group for aproximate disambiguation algorithm with storing calculated similarities.</description>
		</property>
		<property>
			<name>and_feature_info</name>
			<!--<value>"CoAuthorsSnameDisambiguatorFullList#EX_AUTH_SNAMES#-0.0000166#8,ClassifCodeDisambiguator#EX_CLASSIFICATION_CODES#0.99#12,KeyphraseDisambiguator#EX_KEYWORDS_SPLIT#0.99#22,KeywordDisambiguator#EX_KEYWORDS#0.0000369#40".</value>-->
			<value>"IntersectionPerMaxval#EX_DOC_AUTHS_FNAME_FST_LETTERS#1.0#1"</value>
			<description>Features description - model for calculating affinity and contributors clustering. Value in format: "Disambiguator_name#Feature_extractor_name#weight#coefficient_of_the_maximum_number_of_occurrences,...". </description>
		</property>
		<property>
			<name>and_statistics</name>
			<value>false</value>
			<description>Log ANDs algorithms statistics.</description>
		</property>
	</parameters>
	
	<global>
		<job-tracker>${jobTracker}</job-tracker>
		<name-node>${nameNode}</name-node>
		<configuration>
			<property>
				<name>mapred.fairscheduler.pool</name>
				<value>${and_pool}</value>
			</property>
			<property>
				<name>oozie.launcher.mapred.fairscheduler.pool</name>
				<value>${and_pool}</value>
			</property>
			<property>
				<name>mapred.job.queue.name</name>
				<value>${queueName}</value>
			</property>
			<property>
				<name>mapred.mapper.new-api</name>
				<value>true</value>
			</property>
			<property>
				<name>mapred.reducer.new-api</name>
				<value>true</value>
			</property>
			<property>
				<name>oozie.use.system.libpath</name>
				<value>true</value>
			</property>
		</configuration>
	</global>
	
	<start to='split'/>
# END:REPLACE

# BEG:REPLACE @OOZIE-END@

	<action name='send-email'>
        <email xmlns="uri:oozie:email-action:0.1">
            <to>mwos@icm.edu.pl</to>
            <cc>mwos@icm.edu.pl</cc>
            <subject>Email notifications for ${wf:id()}</subject>
            <body>The wf ${wf:id()} successfully completed.</body>
        </email>
        <ok to='end'/>
        <error to='kill'/>
    </action>

	<kill name="kill">
		<message>Workflow failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
	</kill>
	<end name="end"/>
</workflow-app>
# END:REPLACE

# BEG:REPLACE @PIG_START@
		<pig>
# END:REPLACE

# BEG:REPLACE @PIG_END@
		</pig>
# END:REPLACE
<!-- ================================================================= -->
<!-- ============================= AUXIL ============================= -->
<!-- ================================================================= -->
# BEG:REPLACE @AUXIL@

			<param>one=one</param>
			<param>exh=exh</param>
			<param>appSim=app_sim</param>
			<param>appNoSim=app_no_sim</param>
			
			<param>and_aproximate_sim_limit=${and_aproximate_sim_limit}</param>
			<param>and_exhaustive_limit=${and_exhaustive_limit}</param>
			<param>and_failedContribs=${and_failedContribs}</param>
			<param>and_feature_info=${and_feature_info}</param>
			<param>and_lang=${and_lang}</param>
			<param>and_outputContribs=${and_outputContribs}</param>
			<param>and_scheduler=${and_pool}</param>
			<param>and_splitter_output=${and_splitted_output}</param>
			<param>and_statistics=${and_statistics}</param>
			<param>and_threshold=${and_threshold}</param>
			<param>and_cid_dockey=${and_cid_dockey}</param>
			<param>and_outputPB=${and_outputPB}</param>
# END:REPLACE
<!-- ================================================================= -->
<!-- ============================= WF-1 ============================== -->
<!-- ================================================================= -->
# BEG:REPLACE @WF-1@
            <script>splitter.pig</script>
            <param>and_sample=${and_sample}</param>
            <param>and_inputDocsData=${and_inputDocsData}</param>
<!--        <param>and_outputData=${and_splitted_output}/{one,enh,app_sim,app_no_sim}</param>  -->
			@AUXIL@
# END:REPLACE
<!-- ================================================================= -->
<!-- ============================= WF-2 ============================== -->
<!-- ================================================================= -->
# BEG:REPLACE @WF-2@
<!--
@script@ one exh app_sim app_no_sim
-->
            <script>disambiguation_@script@.pig</script>
            <param>and_sample=1.0</param>
            <param>and_inputDocsData=${and_splitted_output}/@script@/*</param>
	        <param>mapredChildJavaOpts=${and_mapredChildJavaOpts_@script@}</param>
<!--        <param>and_outputData=${and_outputContribs}/{one,enh,app_sim,app_no_sim}</param>  -->
<!--        <param>and_outputData=${and_failedContribs}/{one,enh,app_sim,app_no_sim}</param>  -->
			@AUXIL@
# END:REPLACE
<!-- ================================================================= -->
<!-- ============================= WF-3 ============================== -->
<!-- ================================================================= -->
# BEG:REPLACE @WF-3@
            <script>join.pig</script>
            <param>and_sample=1.0</param>
            <param>and_outputContribs=${and_outputContribs}</param>
			@AUXIL@
# END:REPLACE
<!-- ================================================================= -->
<!-- ================================================================= -->
<!-- ================================================================= -->
@OOZIE-START@
# BEG:ACTION name=split ok=do_and error=kill
		@PIG_START@
			@WF-1@
		@PIG_END@
# END:ACTION

# BEG:FORK_MERGE name=do_and node_after_join=serialize error=kill
@script@ one exh app_sim app_no_sim
		@PIG_START@
			@WF-2@
		@PIG_END@
# END:FORK_MERGE

# BEG:ACTION name=serialize ok=end error=kill
		@PIG_START@
			@WF-3@
		@PIG_END@
# END:ACTION

@OOZIE-END@
