<!--
  ~ This file is part of CoAnSys project.
  ~ Copyright (c) 2012-2013 ICM-UW
  ~
  ~ CoAnSys is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ CoAnSys is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with CoAnSys. If not, see <http://www.gnu.org/licenses/>.
  -->

<workflow-app xmlns="uri:oozie:workflow:0.4" name="heuristic-wf">
    <parameters>
        <property>
            <name>jobTracker</name>
        </property>
        <property>
            <name>nameNode</name>
        </property>
        <property>
            <name>queueName</name>
            <value>default</value>
        </property>
        <property>
            <name>pool</name>
            <value>default</value>
        </property>
        <property>
            <name>workingDirectory</name>
        </property>
        <property>
            <name>sourceEntities</name>
        </property>
        <property>
            <name>destinationEntities</name>
        </property>
        <property>
            <name>output</name>
        </property>
    </parameters>
    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapred.mapper.new-api</name>
                <value>true</value>
            </property>
            <property>
                <name>mapred.reducer.new-api</name>
                <value>true</value>
            </property>
            <!-- General job parameters -->
            <property>
                <name>mapred.job.queue.name</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.fairscheduler.pool</name>
                <value>${pool}</value>
            </property>
            <property>
                <name>mapred.fairscheduler.pool</name>
                <value>${pool}</value>
            </property>
            <property>
                <name>mapreduce.inputformat.class</name>
                <value>org.apache.hadoop.mapreduce.lib.input.SequenceFileInputFormat</value>
            </property>
            <property>
                <name>mapreduce.outputformat.class</name>
                <value>org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat</value>
            </property>
            <property>
                <name>mapred.max.split.size</name>
                <value>50000000</value>
            </property>
        </configuration>
    </global>
    <start to="prepare"/>

    <action name="prepare">
        <fs>
            <delete path="${workingDirectory}"/>
            <mkdir path="${workingDirectory}"/>
        </fs>
        <ok to="first"/>
        <error to="fail"/>
    </action>

    <action name="first">
        <map-reduce>
            <configuration>
                <!-- MapReduce Mapper/Reducer parameters -->
                <property>
                  <name>mapreduce.inputformat.class</name>
                  <value>org.apache.hadoop.mapreduce.lib.input.DelegatingInputFormat</value>
                </property>
                <property>
                  <name>mapreduce.map.class</name>
                  <value>org.apache.hadoop.mapreduce.lib.input.DelegatingMapper</value>
                </property>
                <property>
                    <name>mapred.input.dir.mappers</name>
                    <value>
                        ${sourceEntities};pl.edu.icm.coansys.citations.mappers.EntityAuthorTagger,${destinationEntities};pl.edu.icm.coansys.citations.mappers.AuthorIndexer
                    </value>
                </property>
                <property>
                    <name>mapred.input.dir.formats</name>
                    <value>
                        ${sourceEntities};org.apache.hadoop.mapreduce.lib.input.SequenceFileInputFormat,${destinationEntities};org.apache.hadoop.mapreduce.lib.input.SequenceFileInputFormat
                    </value>
                </property>
                <property>
                    <name>mapred.mapoutput.key.class</name>
                    <value>pl.edu.icm.coansys.citations.data.MarkedText</value>
                </property>
                <property>
                    <name>mapred.mapoutput.value.class</name>
                    <value>pl.edu.icm.coansys.citations.data.MarkedBytesWritable</value>
                </property>
                <property>
                    <name>mapreduce.partitioner.class</name>
                    <value>pl.edu.icm.coansys.citations.data.MarkedTextPartitioner</value>
                </property>
                <property>
                    <name>mapred.output.value.groupfn.class</name>
                    <value>pl.edu.icm.coansys.citations.data.MarkedTextGroupComparator</value>
                </property>
                <property>
                    <name>mapred.output.key.comparator.class</name>
                    <value>pl.edu.icm.coansys.citations.data.MarkedTextSortComparator</value>
                </property>
                <property>
                    <name>mapreduce.reduce.class</name>
                    <value>pl.edu.icm.coansys.citations.reducers.AuthorJoinerStepOne</value>
                </property>
                <property>
                    <name>mapred.output.dir</name>
                    <value>${workingDirectory}/heuristic_partial</value>
                </property>
                <property>
                    <name>mapred.output.key.class</name>
                    <value>pl.edu.icm.coansys.citations.data.MarkedText</value>
                </property>
                <property>
                    <name>mapred.output.value.class</name>
                    <value>org.apache.hadoop.io.BytesWritable</value>
                </property>
            </configuration>
        </map-reduce>
        <ok to="second"/>
        <error to="fail"/>
    </action>

    <action name="second">
        <map-reduce>
            <configuration>
                <property>
                    <name>mapreduce.map.class</name>
                    <value>org.apache.hadoop.mapreduce.Mapper</value>
                </property>
                <property>
                    <name>mapreduce.reduce.class</name>
                    <value>pl.edu.icm.coansys.citations.reducers.AuthorJoinerStepTwo</value>
                </property>
                <!-- MapReduce input/output parameters -->
                <property>
                    <name>mapred.input.dir</name>
                    <value>${workingDirectory}/heuristic_partial</value>
                </property>
                <property>
                    <name>mapred.output.dir</name>
                    <value>${workingDirectory}/heuristic_with_dups</value>
                </property>
                <property>
                    <name>mapred.mapoutput.key.class</name>
                    <value>pl.edu.icm.coansys.citations.data.MarkedText</value>
                </property>
                <property>
                    <name>mapred.mapoutput.value.class</name>
                    <value>org.apache.hadoop.io.BytesWritable</value>
                </property>
                <property>
                    <name>mapreduce.partitioner.class</name>
                    <value>pl.edu.icm.coansys.citations.data.MarkedTextPartitioner</value>
                </property>
                <property>
                    <name>mapred.output.value.groupfn.class</name>
                    <value>pl.edu.icm.coansys.citations.data.MarkedTextGroupComparator</value>
                </property>
                <property>
                    <name>mapred.output.key.comparator.class</name>
                    <value>pl.edu.icm.coansys.citations.data.MarkedTextSortComparator</value>
                </property>
                <property>
                    <name>mapred.output.key.class</name>
                    <value>org.apache.hadoop.io.BytesWritable</value>
                </property>
                <property>
                    <name>mapred.output.value.class</name>
                    <value>org.apache.hadoop.io.BytesWritable</value>
                </property>
            </configuration>
        </map-reduce>
        <ok to="distinctor"/>
        <error to="fail"/>
    </action>

    <action name="distinctor">
        <map-reduce>
            <prepare>
                <delete path="${output}"/>
            </prepare>
            <configuration>
                <property>
                    <name>mapreduce.map.class</name>
                    <value>pl.edu.icm.coansys.citations.mappers.IdExtractor</value>
                </property>
                <property>
                    <name>mapreduce.reduce.class</name>
                    <value>pl.edu.icm.coansys.citations.reducers.Distinctor</value>
                </property>
                <!-- MapReduce input/output parameters -->
                <property>
                    <name>mapred.input.dir</name>
                    <value>${workingDirectory}/heuristic_with_dups</value>
                </property>
                <property>
                    <name>mapred.output.dir</name>
                    <value>${workingDirectory}/heuristic_fat</value>
                </property>
                <property>
                    <name>mapred.mapoutput.key.class</name>
                    <value>org.apache.hadoop.io.Text</value>
                </property>
                <property>
                    <name>mapred.mapoutput.value.class</name>
                    <value>pl.edu.icm.coansys.citations.data.BytesPairWritable</value>
                </property>
                <property>
                    <name>mapreduce.partitioner.class</name>
                    <value>pl.edu.icm.coansys.citations.data.TextNumericWritablePartitioner</value>
                </property>
                <property>
                    <name>mapred.output.value.groupfn.class</name>
                    <value>pl.edu.icm.coansys.citations.data.TextNumericWritableGroupComparator</value>
                </property>
                <property>
                    <name>mapred.output.key.comparator.class</name>
                    <value>pl.edu.icm.coansys.citations.data.TextNumericWritableSortComparator</value>
                </property>
                <property>
                    <name>mapred.output.key.class</name>
                    <value>org.apache.hadoop.io.BytesWritable</value>
                </property>
                <property>
                    <name>mapred.output.value.class</name>
                    <value>org.apache.hadoop.io.BytesWritable</value>
                </property>
            </configuration>
        </map-reduce>
        <ok to="preassesor"/>
        <error to="fail"/>
    </action>

    <action name="preassesor">
        <map-reduce>
            <configuration>
                <property>
                    <name>mapreduce.map.class</name>
                    <value>pl.edu.icm.coansys.citations.mappers.PreAssesor</value>
                </property>
                <property>
                    <name>mapreduce.reduce.class</name>
                    <value>pl.edu.icm.coansys.citations.reducers.TopSelector</value>
                </property>
                <!-- MapReduce input/output parameters -->
                <property>
                    <name>mapred.input.dir</name>
                    <value>${workingDirectory}/heuristic_fat</value>
                </property>
                <property>
                    <name>mapred.output.dir</name>
                    <value>${workingDirectory}/heuristic_slim</value>
                </property>
                <property>
                    <name>mapred.mapoutput.key.class</name>
                    <value>pl.edu.icm.coansys.citations.data.TextNumericWritable</value>
                </property>
                <property>
                    <name>mapred.mapoutput.value.class</name>
                    <value>pl.edu.icm.coansys.citations.data.BytesPairWritable</value>
                </property>
                <property>
                    <name>mapred.output.key.class</name>
                    <value>org.apache.hadoop.io.BytesWritable</value>
                </property>
                <property>
                    <name>mapred.output.value.class</name>
                    <value>org.apache.hadoop.io.BytesWritable</value>
                </property>
            </configuration>
        </map-reduce>
        <ok to="assess"/>
        <error to="fail"/>
    </action>

    <action name="assessor">
        <map-reduce>
            <configuration>
                <property>
                    <name>mapreduce.map.class</name>
                    <value>pl.edu.icm.coansys.citations.mappers.EntityAssesor</value>
                </property>
                <property>
                    <name>mapreduce.reduce.class</name>
                    <value>pl.edu.icm.coansys.citations.reducers.BestSelector</value>
                </property>
                <property>
                    <name>mapreduce.combine.class</name>
                    <value>pl.edu.icm.coansys.citations.reducers.BestSelector</value>
                </property>
                <!-- MapReduce input/output parameters -->
                <property>
                    <name>mapred.input.dir</name>
                    <value>${workingDirectory}/heuristic_slim</value>
                </property>
                <property>
                    <name>mapred.output.dir</name>
                    <value>${output}</value>
                </property>
                <property>
                    <name>mapred.output.key.class</name>
                    <value>org.apache.hadoop.io.Text</value>
                </property>
                <property>
                    <name>mapred.output.value.class</name>
                    <value>org.apache.hadoop.io.Text</value>
                </property>
            </configuration>
        </map-reduce>
        <ok to="end"/>
        <error to="fail"/>
    </action>

    <kill name="fail">
        <message>Java failed, error message [${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>
